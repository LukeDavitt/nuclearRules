"use strict";

var scene, camera, renderer;
var geometry, material, mesh, group, pointLight, lightDiff = 2, planetGeometry, planetMaterial, planetMesh, planet;

window.onload = function(){
    window.document.body.onload = startThreeJs(); // note removed parentheses
};

var startThreeJs = function(){
    init();
    animate();
};

function init() {

    scene = new THREE.Scene();

    camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );
    camera.position.z = 1000;
    
    group = new THREE.Group();

    scene.add(group);

    var loader = new THREE.TextureLoader();
                loader.load( "<%= asset_path('earth.jpg') %>", function ( texture ) {

                    geometry = new THREE.SphereGeometry( 175, 20, 20 );

                    material = new THREE.MeshPhongMaterial( { map: texture } );
                    mesh = new THREE.Mesh( geometry, material );
                    group.add( mesh );

                } );

    planetGeometry = new THREE.SphereGeometry(20);
        planetMaterial = new THREE.MeshBasicMaterial({ color:0x86a2f8 });
        planetMesh = new THREE.Mesh(planetGeometry, planetMaterial );
        planet = new THREE.Object3D();
        planet.add(planetMesh);
        planetMesh.position.x = 450;
        scene.add( planet );

    var light = new THREE.AmbientLight( 0xe5e5e5 );
    scene.add(light);
    renderer = new THREE.WebGLRenderer({ antialiasing: true });
    renderer.setSize( window.innerWidth, window.innerHeight );
    renderer.setClearColor( 0xf8dc86 );
    window.document.body.appendChild( renderer.domElement );

}

function animate() {

    requestAnimationFrame( animate );
    if(mesh)mesh.rotation.y += 0.01;
    planet.rotation.y += 0.01;
    renderer.render( scene, camera );

}