"use strict";

var scene, camera, renderer;
var geometry, axis, axis2, axis3, material, mesh, group, pointLight, radIncrement = 0.05, rad = 0, electronGeometry, electronMaterial, electronMesh, electron;
var electron2, electron3, electron4, electron5;

window.onload = function(){
    window.document.body.onload = startThreeJs(); // note removed parentheses
};

var startThreeJs = function(){
    init();
    animate();
};

function init() {

    scene = new THREE.Scene();

    camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );
    camera.position.z = 1000;
    
    group = new THREE.Group();

    scene.add(group);

    var loader = new THREE.TextureLoader();
                loader.load( "<%= asset_path('earth.jpg') %>", function ( texture ) {

                    geometry = new THREE.SphereGeometry( 175, 20, 20 );

                    material = new THREE.MeshPhongMaterial( { map: texture } );
                    mesh = new THREE.Mesh( geometry, material );
                    group.add( mesh );

                } );

    electronGeometry = new THREE.SphereGeometry(20);
        electronMaterial = new THREE.MeshBasicMaterial({ color:0x86a2f8 });
        electronMesh = new THREE.Mesh(electronGeometry, electronMaterial );
        electron = new THREE.Object3D();
        electron.add(electronMesh);
        //electronMesh.position.x = 450;
        electronMesh.position.y = 450;
        scene.add( electron );

    electronGeometry = new THREE.SphereGeometry(20);
        electronMaterial = new THREE.MeshBasicMaterial({ color:0xf8a386 });
        electronMesh = new THREE.Mesh(electronGeometry, electronMaterial );
        electron2 = new THREE.Object3D();
        electron2.add(electronMesh);
        //electronMesh.position.x = 450;
        electronMesh.position.x = 450;
        scene.add( electron2 );
    
    electronGeometry = new THREE.SphereGeometry(20);
        electronMaterial = new THREE.MeshBasicMaterial({ color:0xdbf886 });
        electronMesh = new THREE.Mesh(electronGeometry, electronMaterial );
        electron3 = new THREE.Object3D();
        electron3.add(electronMesh);
        //electronMesh.position.x = 450;
        electronMesh.position.z = 450;
        scene.add( electron3 );

    electronGeometry = new THREE.SphereGeometry(20);
        electronMaterial = new THREE.MeshBasicMaterial({ color:0xdc86f8 });
        electronMesh = new THREE.Mesh(electronGeometry, electronMaterial );
        electron4 = new THREE.Object3D();
        electron4.add(electronMesh);
        electronMesh.position.y = 0;
        electronMesh.position.x = 0;
        electronMesh.position.z = 450;
        scene.add( electron4 );

    electronGeometry = new THREE.SphereGeometry(20);
        electronMaterial = new THREE.MeshBasicMaterial({ color:0xff0000 });
        electronMesh = new THREE.Mesh(electronGeometry, electronMaterial );
        electron5 = new THREE.Object3D();
        electron5.add(electronMesh);
        electronMesh.position.y = 0;
        electronMesh.position.x = 0;
        electronMesh.position.z = 450;
        scene.add( electron5 );


    axis = new THREE.Vector3( 1, 1, 0);
    axis2 = new THREE.Vector3( 1, -1, 0);
    var light = new THREE.AmbientLight( 0xe5e5e5 );
    scene.add(light);
    renderer = new THREE.WebGLRenderer({ antialiasing: true });
    renderer.setSize( window.innerWidth, window.innerHeight );
    renderer.setClearColor( 0xf8dc86 );
    window.document.body.appendChild( renderer.domElement );

}

function animate() {

    requestAnimationFrame( animate );
     if(mesh)mesh.rotation.y += 0.01;
     electron.rotation.z -= 0.02;
     electron2.rotation.y += 0.02;
     electron3.rotation.x += 0.02;
     electron4.rotateOnAxis(axis, 0.012);
     electron5.rotateOnAxis(axis2, 0.01);
     renderer.render( scene, camera );

}